<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Hailey Gryka</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Hailey Gryka</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Feb 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Keyword Identifier</title>
      <link>/2021/02/09/keyword-identifier/</link>
      <pubDate>Tue, 09 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/02/09/keyword-identifier/</guid>
      <description>Keyword and Summary GeneratorIn the process of creating an online knowledgebank, a notable amount of time is spent reading and compiling keywords and summaries for the documents of interest. To optimize this process and reduce the time committment for creating the knowledgebank, Natural Language Processing techniques are useful.
Below, an article url may be entered to obtain the top 10 keywords and top 5 phrases from the article.</description>
    </item>
    
    <item>
      <title>RSS Feed</title>
      <link>/2021/01/22/rss-feed/</link>
      <pubDate>Fri, 22 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/2021/01/22/rss-feed/</guid>
      <description>Having a summary of newsfeeds can be useful for a multitude of reasons. Such a summary can reduce the amount of time one spends intaking media content or such techniques could be used for finding articles of interest related to specific topics. Herein is an example of creating a summary of articles from a multitude of sources, including Nature, Science Daily, and Wired.
titledatelinkdescriptionhashReply to: On the measured dielectric constant of amorphous boron nitride2021-02-03 00:00:00http://feeds.</description>
    </item>
    
    <item>
      <title>Movie Recommendation System</title>
      <link>/2020/09/15/movie-recommendation-system/</link>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/09/15/movie-recommendation-system/</guid>
      <description>Movie Recommendation SystemI was recently inspired to create a movie recommendation system when a family member started hosting movie nights during the pandemic. There are some diverse tastes amongst the group of attenties so utilizing multiple genres and movies was a benefit for this project.
This post is a final product of a descent bit of initial data exploration, preprocessing, and similarity testing. Ultimately, the recommenderlab package was extremely helpful, although, I also explored tm and some of the statistical methods available through that package.</description>
    </item>
    
    <item>
      <title>Beautiful R Plots</title>
      <link>/2020/08/16/beautiful-r-plots/</link>
      <pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/08/16/beautiful-r-plots/</guid>
      <description>The R language is fantastic for quickly turning data into plots, however, it is not commonly used for creating visual aids for presentation or publication figures. While it is more common to produce final figures with other software, the same quality figures can be created in R.
Herein I show several examples of plots, that I have re-created using R, in an aesthetically similar manner. In each example, I provide the original figure and then the R-code I used for replication, followed by the replicate figure.</description>
    </item>
    
  </channel>
</rss>